Download and use github in Visual Studio Code

Setting up Github in Visual Studio Code
   1. Download git from https://git-scm.com/download/win
   2. Click Install git
   3. Select Components Window
      # (Optional) Uncheck Windows Explorer Integration
      # Click Next
   4. Pick editor for Git File Window
      # (Optional) Visual Studio Code as Git editor or use Notepad++ if installed
   5. Git Formatting Window
      # Checkout as-in, commit Unix-style line endings
      # Use Windows' default console window
      # Enable file system cachine
      # Enable Git Credential Manager
      Note: This should add the git binary to system environment path. 
      If it doesn't follow then follow the next instructions.
      # Add Git to environment path
      # Finish installing Git
   6. Download Visual Studio Code for system from https://code.visualstudio.com/download

Ref: https://blogs.msdn.microsoft.com/nicktrog/2016/02/11/configuring-visual-studio-code-for-php-development/

Setting Git as an Environment Variable
   1. Search Environment Variables
      # Advanced Tab
      # Environment Variables
      # System Variables > Edit Path
      # New with Path being C:\Program Files\Git\bin or where ever the Git\bin folder is
      # Click Okay

Syncing Visual Studio Code with Github.com account
   1. Download GitHub extension
   2. Download GitHub Pull Requests extension
   3. Open terminal (Shortcut Ctrl + `)
      Terminal: git config --global user.name {{ USERNAME }}
	   Terminal: git config --global user.email {{ EMAIL }}
	4. Click Github Pull Request extension on the side window
   5. Click Sign In and a window will pop up asking you to sign into Github 
   and to add an OAuth token.
   * You may have to do a pull or push to a repository for the user dialog 
   window shows up asking you to sign into github.com

Disable Diagnostics Crash Reporting
   1. File > Preferences > Settings
   2. Search Telemetry
   3. Uncheck both boxes
   4. Restart VSCode

Enable Bash Terminal
   1. Open search bar with Ctrl + Shift + p
   2. In the search bar type >Shell
   3. Select "Terminal Select Default Shell"
   4. Select "Git Bash"

Create .bashrc
   1. Open terminal (Shortcut Ctrl + `)
   2. Navigate to your user home directory
   3. Type "copy > ~/.bashrc"
       # The terminal will say "Command not found" but the .bashrc file will be created

Common .bashrc Alias
   - Alias vue command and enable Vue Create
      1. Open .bashrc
      2. Type into the .bashrc file
         # alias vue='winpty vue.cmd'
      3. Save .bashrc file
      4. Restart VSCode

Ignore directory changes in VSCode
   * Useful if a directory is changed a lot, such as, node_modules
   1. In the root of your project, same as the .git directory, create a text file called .gitignore
   2. The file itself should contain directories or files you wish to ignore in any sub-directories. If you need to fine-tune the 
      ignore, follow the PATTERN FORMAT at https://git-scm.com/docs/gitignore
      Example: node_modules/ 
   * The files and directories will still be tracked in the Explorer window if they were created before the .gitignore file was 
     created.
   4. Go to the file in VSCode Explorer and you should see the .gitignore.txt. Remove the .txt extension. .gitignore is a special
      extension that github uses.
   5. Close VSCode and launch it again to make sure the .gitignore configurations are loaded 
   6. Find a directory with a lot of packages and run npm install to test that the .gitignore file works

Initial commit from local repository to remote
   1. Make sure the new repository exist on github and that it is empty
   2. Create new repository on github or through the terminal
   3. Open terminal (Shortcut Ctrl + `)
      * Make sure you are in the directory you want the local copy of your repository to live in
      Terminal: git init
      Terminal: git add .
	   Terminal: git commit -m "Initial commit"
	   Terminal: git remote add origin https://github.com/USERNAME/PATH_TO_NEW_REPOSITORY.git
	   Terminal: git push -u origin master
	  
Commit from local repository to remote
   1. Navigate to repository with a .git already in it. If it does not exists use the previous instructions
   2. Open terminal (Shortcut Ctrl + `)
      Terminal: git add .
	   Terminal: git commit -m "Initial commit"
	   Terminal: git push -u origin master

Creating new local repository from existing remote repository
   1. Make sure you are in the directory you want the local copy of your repository to live in
   2. Open terminal (Shortcut Ctrl + `)
      Terminal: git init (optional)
      Terminal: git remote add origin https://github.com/USERNAME/PATH_TO_EXISTING_REPOSITORY.git
      Terminal: git clone https://github.com/USERNAME/PATH_TO_EXISTING_REPOSITORY.git
   # The clone command will automatically track the repository

Creating new local repository from existing organization repository
   Note: The same instructions as above but the organization name replaces the USERNAME
	  
Loading repository in Visual Studio Code Source Control that doesn't show up
   1. Source Control Extension
   2. Open folder with .git in it that was already linked to a repository

Switching Repositories that are loaded into Source Control
   1. File > Close Folder
   2. File > Open Folder (This should have a .git that is linked to a remote repository)

Commit using the Source Control Extension
   1. Type a commit message
   2. Open the three dot menu
   3. Select: Stage All Chnages
   4. Select: Commit Staged
   5. Select: Push or Push to if you have a specific branch you need to push to
   
Change commit message length in VSCode Github Pull Request Extension
   1. File > Preferences > Settings (Shortcut Ctrl + ,)
   2. Type into the search bar: length
   3. Under the Extensions drop down select Git
   4. Change the value of Git: Input Validation Length
   5. Change the value of Git: Input Validation Subject Length
   6. Close settings and close Visual Studio Code
   
